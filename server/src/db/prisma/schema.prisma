// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  @@map("posts") 
  id Int @id @default(autoincrement()) 
  title String
  link String?
  domain String?
  text String?
  upvote Int @default(0)
  createdAt DateTime @default(now())
  rankingScore Float @default(0)

  author User @relation("Posts", fields: [authorId], references: [id])
  authorId Int

  favoritedBy User[] @relation("FavoritePosts") 
  upvotedBy User[] @relation("UpvotedPosts") 
  hiddenBy User[] @relation("Hidden")

  comments Comment[]
}

model User {
  @@map("users")
  id Int @default(autoincrement()) @id
  name String @unique
  email String? 
  about String @default("")
  password String 
  createdAt DateTime @default(now())
  karma Int @default(0) 
  tokenVersion Int @default(0)

  posts Post[] @relation("Posts") 
  favoritePosts Post[] @relation("FavoritePosts") 
  upvotedPosts Post[] @relation("UpvotedPosts")
  hidden Post[] @relation("Hidden")

  comments Comment[]
  favoritedComments Comment[] @relation("FavoritedComments")
  upvotedComments Comment[] @relation("UpvotedComments")
}

model Comment {
  @@map("comments")
  id Int @default(autoincrement()) @id
  message String
  upvote Int @default(0)
  createdAt DateTime @default(now())

  post Post @relation(fields: [postId], references: [id])
  postId Int

  author User @relation(fields: [authorId], references: [id])
  authorId Int

  favoritedBy User[] @relation("FavoritedComments") 
  upvotedBy User[] @relation("UpvotedComments") 

  parentId Int?
  parent Comment? @relation(fields:[parentId], references: [id])
}
